============= Infra requriements ============= 

Take atleast two nodes 1 master & 1 slave node 

Master: Min 4GB RAM,2 Core CPU (t2.medium)
Worker: Min 1GB RAM,1 Core CPU (t2.micro)

************ Mandatory OS versions ************
Take any ubuntu image with min version >= 20.4
root@ip-172-31-20-88:~# lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 20.04.4 LTS
Release:        20.04
Codename:       focal

============= Install below softwares in all the nodes (master,worker) ============= 

pre-checks::

	cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
	overlay
	br_netfilter
	EOF

	sudo modprobe overlay
	sudo modprobe br_netfilter

	# sysctl params required by setup, params persist across reboots
	cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
	net.bridge.bridge-nf-call-iptables  = 1
	net.bridge.bridge-nf-call-ip6tables = 1
	net.ipv4.ip_forward                 = 1
	EOF

	# Apply sysctl params without reboot
	sudo sysctl --system

Installing Container runtime ::

	Reference Links:
	https://github.com/containerd/containerd/blob/main/docs/getting-started.md
	https://docs.docker.com/engine/install/ubuntu/

	sudo apt-get remove docker docker-engine docker.io containerd runc -y

	sudo apt-get update -y
	sudo apt-get install ca-certificates curl gnupg lsb-release -y
		
	sudo mkdir -p /etc/apt/keyrings
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

	echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
	  
	sudo apt-get update -y
	sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y

	You have to make sure that you need to remove "cri" from the config file below. 

	Before changes:
	root@ip-172-31-20-221:~# cat /etc/containerd/config.toml|grep -i disab
	disabled_plugins = ["cri"]

	Post Changes:
	Remove "cri" from above & restart the services. 

	root@ip-172-31-20-221:~# cat /etc/containerd/config.toml|grep -i disab
	disabled_plugins = [""]

	sudo systemctl restart containerd

Installing kubernetes deamons::

	sudo apt-get update -y
	sudo apt-get install -y apt-transport-https ca-certificates curl
	sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
	echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
	sudo apt-get update -y
	sudo apt-get install -y kubelet kubeadm kubectl


============= Execute the below commands from the MASTER NODE ONLY !!!! =============

kubeadm init --ignore-preflight-errors=all --token-ttl=0
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
export KUBECONFIG=/etc/kubernetes/admin.conf
echo "export KUBECONFIG=/etc/kubernetes/admin.conf" > ~/.bashrc
bash
export kubever=$(kubectl version | base64 | tr -d '\n')
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.26.147:6443 --token xer2jf.ubi4zbl0x0sv5ktd \
        --discovery-token-ca-cert-hash sha256:b7673551f2396b4875c392653ec4164008e665e1d65083f11fb41a1e869b1ae3


============= Execute the below commands from ALL THE WORKNER NODES !!!! ============= 

kubeadm join 172.31.26.147:6443 --token xer2jf.ubi4zbl0x0sv5ktd \
        --discovery-token-ca-cert-hash sha256:b7673551f2396b4875c392653ec4164008e665e1d65083f11fb41a1e869b1ae3
		
		
============= Final Verification from Master node ============= 

root@ip-172-31-26-147:~# kubectl get nodes
NAME               STATUS   ROLES           AGE     VERSION
ip-172-31-20-88    Ready    <none>          15s     v1.24.2
ip-172-31-26-147   Ready    control-plane   4m31s   v1.24.2
root@ip-172-31-26-147:~#


